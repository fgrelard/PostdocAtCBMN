#+bibliography: bib/main.bib
#+TITLE: Postdoc at CBMN

#+attr_html: :width 500px :align left
[[file:fig/rate.png]]

* Meetings
** Conferences
** Group meetings
*** [[id:b5d18fba-3604-41b1-8633-ea71161ed97b][Meeting November]]
<2021-11-19 Fri>
*** Meeting December
** Scientific days
*** [[id:e844da5b-57a7-4888-b9ab-6bbeccc8dc9c][Scientific *day* Multiscale Biophysics Dept. (MSB-CBMN)]]
<2021-11-05 Fri>
**  Trainings
* Research
** Input/Output
*** Sparse matrices :ATTACH:
:PROPERTIES:
:ID:       24e88f70-b939-46b0-9c3a-1e59f9f7d26a
:END:
Large centroided MS images cannot fit in memory. The majority of the values in the MS images are zeroes. One approach is to use /sparse matrices/, where only nonzero datapoints are stored.

_Approach:_
**** DONE Sparse matrices with same operations as numpy's ndarray
CLOSED: <2021-10-01 Fri 12:05>

#+begin_src python
  import sparse

  #redefine numpy's ndarray operations
  def __gt__(...):
      pass

  def transpose(...):
      pass

  def __getitem__(...):
      pass
#+end_src
**** DONE Class enclosing the MS Image
CLOSED: <2021-10-08 Fri 12:19>

Operations on both the spectra and the image
#+begin_src python
  class MSImageImplementation:
      def __init__(self, image, spectra):
          self.image = image
          self.spectra = spectra

      #redefine various operations working on both spectra and images
#+end_src
**** DONE Transparent integration
CLOSED: <2021-10-29 Fri 12:05>

Choose the appropriate type for the MS image depending on whether the data is centroided or profile.
#+begin_src python
  class MSImage:
      "
        Allows to create an MS image type
        with the appropriate np.ndarray or
        sparse matrix type
        "

        def __init__(self, image, ...):
            # determines the appropriate type
            image = which_type(image)
            return MSImageImplementation(image, ...)
#+end_src

*** Efficient input/output
Centroided images with high spatial resolution still do not fit in memory.
We need to read the images *on the fly*, in a time-efficient manner.

_State-of-the-art:_
1. ~Cardinal~
   [[https://cardinalmsi.org/][Website]]

   I/O strategy:
   - ~readMSIData~
     Read images on the fly without loading the whole image in memory. Access for one ion image is done through the ~imzML~ file. [[http://bioconductor.org/packages/release/bioc/manuals/Cardinal/man/Cardinal.pdf][Manual]].
    _Pros:_
     - Reduced memory usage
    _Cons:_
     - Slow access
     - Not possible to process an entire dataset
   - ~matter~
     As of *version 2.0*, Cardinal uses the ~matter~ R package.
     [[https://bioconductor.org/packages/release/bioc/vignettes/matter/inst/doc/matter.pdf][Official documentation]].

     #+begin_quote
     /matter is designed for rapid prototyping of new statistical methods when working with larger-than-memory datasets on disk./
     #+end_quote

     This package implements memory-mapped files for  ~imzML~ images.

     _Pros:_
     - Reduced memory usage
     _Cons_:
     - Disk usage
     - Long first-time image loading?
2. ~MSiReader~
   [[https://msireader.wordpress.ncsu.edu/][Website]]
   Creates a ~mat~ file (extension ~.ibh~) containing various information which allow for fast reloading of the data.
   
     #+begin_src octave
       load("myfile.ibh")
       size(scandat.ibdptrs)
       scandat.ibdptrs
       #+end_src

   _Attributes:_
   - ~ibdptrs~ (~width x height, 2~): 2D array of indices , begin indices in the ~ibd~ file for each peak, for /m/z/ and intensity values
   - ~index~ (~width x height~): array of ones
   - ~loc~ (~width, height~): 2D array of indices, pixel positions to flattened indices
   - ~numpts~ (~width x height~): number of spectra points for each pixel position
   - ~posX~, ~posY~ (~width x height~): x and y positions associated to spectra
   - ~tic~ (~width x height~): Total Ion Count for each spectrum
   - Various metadata information (number of columns, rows, scans, polarity, spacing, formats...)

_TODOs:_
**** DONE Find efficient methods in the literature or in alternative softwares
CLOSED: [2021-11-10 Wed 15:49]
:LOGBOOK:
CLOCK: [2021-11-10 Wed 14:00]--[2021-11-10 Wed 15:49] =>  1:49
:END:
**** TODO Implementation of memory-mapped files for ~imzML~ [1/2]
***** DONE Memory map ~ibd~ files
CLOSED: [2021-11-10 Wed 16:51]
~COMMIT:~ [[orgit-rev:~/src/Esmraldi/.git/::81894f0d504709559aefb59e0b55d7dc1f8892de][81894f0 Memory mapped ibd parsing]]
:LOGBOOK:
CLOCK: [2021-11-10 Wed 16:00]--[2021-11-10 Wed 16:50] =>  0:50
:END:
***** TODO Store MS image as a memory-mapped file
~COMMIT:~ [[orgit-rev:~/src/Esmraldi/.git/::ddb0c7a4f4d7ce4a9fefa32dc0bb22650b7a4400][ddb0c7a Store MS image as memmap file]]
:LOGBOOK:
CLOCK: [2021-11-17 Wed 14:17]
CLOCK: [2021-11-17 Wed 09:17]--[2021-11-17 Wed 13:00] =>  3:43
CLOCK: [2021-11-16 Tue 13:55]--[2021-11-16 Tue 17:45] =>  3:50
CLOCK: [2021-11-16 Tue 09:28]--[2021-11-16 Tue 11:26] =>  1:58
CLOCK: [2021-11-15 Mon 16:43]--[2021-11-15 Mon 17:30] =>  0:47
CLOCK: [2021-11-15 Mon 09:57]--[2021-11-15 Mon 11:44] =>  1:47
:END:
**** TODO Implementation of on-the-fly read function similarly to ~MSiReader~.
Create index files with all relevant information from the ~imzML~.
*** General functionalities
_TODOs_:
**** DONE Fix input of ~unsigned_char(1)~ images, i.e. exported by ~GIMP~.
CLOSED: [2021-11-10 Wed 12:41]
~COMMIT:~ [[orgit-rev:~/src/Esmraldi/.git/::0ef1e8c5e0ef7d41220c549ec0f6780fdba3e510][0ef1e8c Fix bug with three channel unsigned char images]]
:LOGBOOK:
CLOCK: [2021-11-10 Wed 12:18]--[2021-11-10 Wed 12:41] =>  0:23
:END:
** Graphical User Interface
*** Displaying images
We need an efficient viewer allowing to display image stacks.
We use the ~pyqtgraph~ library. 

_TODOs:_
**** DONE Display and navigate through ion images
CLOSED: [2021-09-22 Wed 16:14]
**** DONE Display the mean spectrum associated to the MS image
CLOSED: [2021-10-14 Thu 16:27]
**** DONE Interact with the mean spectrum to select ion images
CLOSED: [2021-10-19 Tue 16:15]
**** DONE Interaction with ~TextEdit~ to select the appropriate m/z value with tolerance
CLOSED: [2021-10-19 Tue 16:22]
**** DONE Hover on image to display pixel information
CLOSED: [2021-10-24 Sun 16:24]
**** Bug fixes [4/4]
***** DONE Fix ~Combobox~ selection
CLOSED: [2021-11-09 Tue 11:52]
~COMMIT:~ [[orgit-rev:~/src/Esmraldi/.git/::417d0fac05187b46dd879af13d21e6b03a8bb2d7][417d0fa Fix combobox]]
:LOGBOOK:
CLOCK: [2021-11-09 Tue 11:32]--[2021-11-09 Tue 11:52] =>  0:20
:END:
***** DONE Open new image on the left view only, when gridmode is activated
CLOSED: [2021-11-09 Tue 14:24]
~COMMIT:~ [[orgit-rev:~/src/Esmraldi/.git/::eb501bfc50def363aca301772750a0e9891b4ffa][eb501bf GUI: Only open image in first view]]
:LOGBOOK:
CLOCK: [2021-11-09 Tue 14:22]--[2021-11-09 Tue 14:24] =>  0:02
:END:
***** DONE Avoid duplicating images in views
CLOSED: [2021-11-10 Wed 10:59]
~COMMIT:~ [[orgit-rev:~/src/Esmraldi/.git/::c61fb842c43cee15075b3cf8ea23b92cae928786][c61fb84 Avoid duplicating images in views (static attribute)]]
:LOGBOOK:
CLOCK: [2021-11-10 Wed 10:03]--[2021-11-10 Wed 10:59] =>  0:56
CLOCK: [2021-11-09 Tue 14:25]--[2021-11-09 Tue 17:26] =>  3:01
:END:
***** DONE Link image views when the image sizes are the same
CLOSED: [2021-11-10 Wed 11:41]
~COMMIT:~ [[orgit-rev:~/src/Esmraldi/.git/::5702a484a2862ba640cfcc70539f445db23115fb][5702a48 Add shortcut to link views]]
:LOGBOOK:
CLOCK: [2021-11-10 Wed 11:00]--[2021-11-10 Wed 11:41] =>  0:41
:END:

*** Region-of-Interest management
Regions of interest (ROI) are interesting to analyze an area of pixels. We use them in several use-cases.

 _Use-cases:_
**** DONE Compute the average spectrum of the pixels inside the ROI
CLOSED: [2021-10-25 Mon 16:29]
**** DONE Compute the average pixel intensity inside the ROI
CLOSED: [2021-10-26 Tue 16:30]
**** DONE Control intensity thresholds
CLOSED: [2021-10-31 Sun 16:29]

*** Functionality frames

** Registration
*** Fiducial landmarks :ATTACH:
:PROPERTIES:
:ID:       4cdcd21a-38f1-4848-ab6f-46d8675e9c3e
:END:

_TODOs:_
**** DONE Registration with RGB images
CLOSED: [2021-11-08 Mon 16:11]
:LOGBOOK:
CLOCK: [2021-11-08 Mon 15:25]--[2021-11-08 Mon 16:11] =>  0:46
:END:
**** DONE Fix transformation issues with incorrect parameters (position, scale, ...) during partial registration
CLOSED: [2021-11-08 Mon 18:05]
:LOGBOOK:
CLOCK: [2021-11-08 Mon 16:50]--[2021-11-08 Mon 18:05] =>  1:15
:END:

*** Partial registration
** Correlation
Joint statistical analysis
** Miscellaneous
*** Crop MS images
Some data might be missing from MS images, /i.e./ there are abnormal artefacts where no data is recorded. The image should be cropped to retain only the *valuable information*.

_Approach:_
1) Specify a list of values where data is missing
2) Compute the complementary coordinates where data is present
3) Export the image with the information from those coordinates

_Second approach:_
Modify the ~imzML~ file directly, by removing unnecessary lines and updating the ~XML~ fields of the subsequent spectra.

_Bug fixes:_
**** DONE Removing lines induces undesirable offset of data
CLOSED: [2021-11-08 Mon 16:07]
:LOGBOOK:
CLOCK: [2021-11-05 Fri 15:24]--[2021-11-05 Fri 17:15] =>  1:51
CLOCK: [2021-11-04 Thu 15:27]--[2021-11-04 Thu 17:51] =>  2:24
:END:
1) Generating a simpler image with reduced spectral dimension
2) Try on reduced image
   
* Teaching
* Papers
bibliographystyle:unsrt
bibliography:bib/main.bib
